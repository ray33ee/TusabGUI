To do:

	- on startup, Look into config.json. If the 'user-credentials' entry is null then warn the user that a browser window will appear 
	  asking the user to login with their Google account
	- Replace Console messages with mesage boxes
	- Add functionality to the Drive, quote and photos buttons
	- Call exploitFlush on exit
	- Create a log-like dialog/window that displays the output of the tusab call to the user.
		- While the files are uploading, inform the user they can monitor the progress of the upload by accessing B&S in the system tray
	- Add two option boxes for download, one with 'Extract to LOCATION' and one with 'Extract to LOCATION/GROUPNAME'
	- Add progress bar for upload and download
	- Add tusabGUI to github
	- Add images via resource file, not by path at run time
	- Cleanup and organise code
	- Properly handle error codes from tusab
	- Make sure directories exist when downloading
	- Add context menu support
	- Make sure that, if the user cancels an upload/download, the following are taken care of
		- The bns and tmp directories are cleaned of temporary files generated (but only the ones generated by the cancelled transaction)
		- The metadata file is still correct (if entries need to be added/removed in case they weren't uploaded properly)
		- Files are deleted from Drive
		- The mutex is unlocked
		- Anything else that has to happen to ensure the integrity and accuracy of the system